{"mappings":"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","sources":["src/dom.js"],"sourcesContent":["window.dom={\r\n    create(string){\r\n        const container=document.createElement('template');\r\n        container.innerHTML=string.trim();\r\n        return container.content.firstChild;\r\n    },\r\n    after(node,node2){\r\n        node.parentNode.insertBefore(node2,node.nextSibling)\r\n    },\r\n    before(node,node2){\r\n        node.parentNode.insertBefore(node2,node)\r\n    },\r\n    append(parent,child){\r\n        parent.appendChild(child)\r\n    },\r\n    wrap(node,parent){\r\n        dom.before(node,parent)\r\n        dom.append(parent,node)\r\n    },\r\n    remove(node){\r\n        node.parentNode.removeChild(node)\r\n        return node\r\n    },\r\n    empty(node){//用于删除后代\r\n        const arr=[]\r\n        let x=node.firstChild\r\n        while(x){\r\n            arr.push(dom.remove(x))\r\n            x=node.firstChild\r\n        }\r\n        return arr\r\n    },\r\n    attr(node,name,value){  //用于读写属性  //重载和适配\r\n        if(arguments.length===3){\r\n            node.setAttribute(name,value)//node[name]=value这个方式好像也可以\r\n        }else if(arguments.length===2){\r\n            return node.getAttribute(name)\r\n        }\r\n    },\r\n    text(node,string){//用于读写文本内容\r\n        if(arguments.length===2){\r\n            if('innerText' in node){//适配，判断老的浏览器有没有这个innerText属性\r\n                node.innerText=string\r\n            }else{\r\n                node.textContent=string\r\n            }\r\n        }else if(arguments.length===1){\r\n            if('innerText' in node){//适配，判断老的浏览器有没有这个innerText属性\r\n                return node.innerText\r\n            }else{\r\n                return node.textContent\r\n            }\r\n        }\r\n    },\r\n    html(node,string){//用于读写HTML内容\r\n        if(arguments.length===2){\r\n            node.innerHTML=string\r\n        }else if(arguments.length===1){\r\n            return node.innerHTML\r\n        }\r\n    },\r\n    style(node,name,value){//用于修改style\r\n        if(arguments.length===3){\r\n            node.style[name]=value//dom.style(div,'color','red')\r\n        }else if(arguments.length===2){\r\n            if(typeof name==='string'){\r\n                return node.style[name]//dom.style(div,'color')用于读取属性值\r\n            }else if(name instanceof Object){//判断name是否是一个对象\r\n                const object= name\r\n                for(let key in object){\r\n                    node.style[key]=object[key]//dom.style(div,{color:'red'})\r\n                }\r\n            }\r\n        }\r\n    },\r\n    class:{\r\n        add(node,className){//用于添加class\r\n            node.classList.add(className)\r\n        },\r\n        remove(node,className){//用于删除class\r\n            node.classList.remove(className)\r\n        },\r\n        has(node,className){//判读类名中是否有这个className\r\n            return node.classList.contains(className)\r\n        }\r\n    },\r\n    on(node,eventName,fn){//用于添加事件监听\r\n        node.addEventListener(eventName,fn)\r\n    },\r\n    off(node,eventName,fn){//用于删除事件监听\r\n        node.removeEventListener(eventName,fn)\r\n    },\r\n    find(selector,scope){//用于获取标签或标签们\r\n        return (scope||document).querySelectorAll(selector)\r\n    },\r\n    parent(node){//用于获取父元素\r\n       return node.parentNode\r\n    },\r\n    children(node){//用于获取子元素\r\n        return node.children\r\n    },\r\n    siblings(node){//用于获取兄弟姐妹元素\r\n        return Array.from(node.parentNode.children).filter(n=>n!==node)\r\n    },\r\n    next(node){//用于获取弟弟\r\n        let x=node.nextSibling\r\n        while(x&&x.nodeType===3){\r\n            x=x.nextSibling\r\n        }\r\n        return x\r\n    },\r\n    previous(node){//用于获取哥哥\r\n        let x=node.previousSibling\r\n        while(x&&x.nodeType===3){\r\n            x=x.previousSibling\r\n        }\r\n        return x\r\n    },\r\n    each(nodeList,fn){//用于遍历所有节点\r\n        for(let i=0;i<nodeList.length;i++){\r\n            fn.call(null,nodeList[i])\r\n        }\r\n    },\r\n    index(node){\r\n        const list=dom.children(node.parent)\r\n        let i\r\n        for(i=0;i<list.length;i++){\r\n            if(list[i]===node){\r\n                break\r\n            }\r\n        }\r\n        return i\r\n    }\r\n}"],"names":[],"version":3,"file":"index.26a40173.js.map","sourceRoot":"/__parcel_source_root/"}